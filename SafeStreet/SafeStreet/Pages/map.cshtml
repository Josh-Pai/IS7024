@page
@model SafeStreet.Pages.mapModel
@{
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Safestreet Map</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.10.0/mapbox-gl.js"></script>
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.10.0/mapbox-gl.css" rel="stylesheet" />
    <script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.0/mapbox-gl-geocoder.min.js"></script>
    <link rel="stylesheet" href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.0/mapbox-gl-geocoder.css" type="text/css" />
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #map {
            position: absolute;
            top: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
        }

        .geocoder {
            position: absolute;
            top: 10px;
            left: 10px;
            z-index: 1;
        }

        .current-location-btn {
            position: absolute;
            top: 60px;
            left: 10px;
            z-index: 1;
            background: white;
            padding: 8px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
        }
    </style>
    <script>
        mapboxgl.accessToken = 'pk.eyJ1IjoiY2hlbjRjZyIsImEiOiJjbTNnM3d4ZWYwMGk3MmxxY2ExN2g2ZWViIn0.dos5ickwq46XxLmUly0-_w';

        function loadMap() {
            var map = new mapboxgl.Map({
                container: 'map',
                style: 'mapbox://styles/mapbox/streets-v11',
                center: [-84.31, 39.06], // Longitude, Latitude (example: Cincinnati)
                zoom: 10
            });

            // Add search functionality
            var geocoder = new MapboxGeocoder({
                accessToken: mapboxgl.accessToken,
                mapboxgl: mapboxgl
            });

            // Add geocoder to the map
            document.getElementById('geocoder').appendChild(geocoder.onAdd(map));

            // 1. Add marker and popup on map click
            map.on('click', function (e) {
                if (window.currentMarker) {
                    window.currentMarker.remove();
                }

                window.currentMarker = new mapboxgl.Marker()
                    .setLngLat(e.lngLat) // Set marker position to clicked location
                    .setPopup(new mapboxgl.Popup().setHTML(
                        `<p>Longitude: ${e.lngLat.lng.toFixed(5)}</p><p>Latitude: ${e.lngLat.lat.toFixed(5)}</p>`
                    )) // Popup with coordinates
                    .addTo(map);

                window.currentMarker.getPopup().addTo(map); // Open popup
            }); // <-- Added marker with popup on click

            // 2. Add marker and popup for search result
            geocoder.on('result', function (e) {
                if (window.searchMarker) {
                    window.searchMarker.remove();
                }

                var coords = e.result.geometry.coordinates;
                map.flyTo({ center: coords, zoom: 12 }); // Center map on the result

                window.searchMarker = new mapboxgl.Marker()
                    .setLngLat(coords)
                    .setPopup(new mapboxgl.Popup().setHTML(
                        `<p>Place: ${e.result.text}</p><p>Coordinates: ${coords[1].toFixed(5)}, ${coords[0].toFixed(5)}</p>`
                    )) // Popup with place name and coordinates
                    .addTo(map);

                window.searchMarker.getPopup().addTo(map); // Open popup
            }); // <-- Enhanced search functionality

            // 3. Display user's current location
            document.getElementById('current-location-btn').onclick = function () {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var userCoords = [position.coords.longitude, position.coords.latitude];
                        map.flyTo({ center: userCoords, zoom: 14 }); // Center map on user's location

                        // Add marker for user's location
                        new mapboxgl.Marker({ color: 'blue' })
                            .setLngLat(userCoords)
                            .setPopup(new mapboxgl.Popup().setHTML(
                                `<p>Your Location</p><p>Longitude: ${userCoords[0].toFixed(5)}</p><p>Latitude: ${userCoords[1].toFixed(5)}</p>`
                            )) // Popup with user's coordinates
                            .addTo(map)
                            .getPopup().addTo(map); // Open popup
                    });
                } else {
                    alert('Geolocation is not supported by your browser.');
                }
            }; // <-- Added current location functionality
        }
    </script>
</head>
<body onload="loadMap()">
    <div id="map"></div>
    <!-- Search box -->
    <div id="geocoder" class="geocoder"></div>
    <!-- Current Location Button -->
    <div id="current-location-btn" class="current-location-btn">Show My Location</div>
</body>
</html>
